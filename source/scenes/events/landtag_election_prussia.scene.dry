title: Prussian Landtag Election
view-if: year = next_election_year_prussia and month >= next_election_month_prussia
new-page: true
tags: event
priority: 2
on-arrival: next_election_year_prussia = next_election_year_prussia + 4; next_election_time_prussia = time + 48;
set-jump: new_elections

= Prussian Elections, [+ month : month +] [+ year +]

The Prussian elections are to be held now.

- @new_elections: May we do our best...

@new_elections
on-arrival: {!
for (var c of Q.classes) {
    var class_votes = 0;
    for (var party of Q.parties) {
        if (Q[c + '_' + party] < 0) {
            Q[c + '_' + party] = 0;
        }
        class_votes += Q[c + '_' + party];
    }
    for (var party of Q.parties) {
        Q[c + '_' + party + '_normalized_prussia'] = Math.round(100 * Q[c + '_' + party] / class_votes);
    }
}

// Define adjustment factors
if (Q.year == 1928) {
    Q.adjustmentFactors_spd_prussia = 0.98;
    Q.adjustmentFactors_sapd_prussia = 0.6;
    Q.adjustmentFactors_kpd_prussia = 1.1;
    Q.adjustmentFactors_ddp_prussia = 0.95;
    Q.adjustmentFactors_dbp_prussia = 0.67;
    Q.adjustmentFactors_z_prussia = 1.02;
    Q.adjustmentFactors_dvp_prussia = 1.0;
    Q.adjustmentFactors_csvd_prussia = 1.2;
    Q.adjustmentFactors_wp_prussia = 1.2;
    Q.adjustmentFactors_cnblp_prussia = 1.2;
    Q.adjustmentFactors_kvp_prussia = 1.2;
    Q.adjustmentFactors_dnvp_prussia = 1.2;
    Q.adjustmentFactors_nsdap_prussia = 0.66,
    Q.adjustmentFactors_other_prussia = 0.88;
} else if (Q.year == 1929) {
    Q.adjustmentFactors_spd_prussia = 0.97;
    Q.adjustmentFactors_sapd_prussia = 0.8;
    Q.adjustmentFactors_kpd_prussia = 1.08;
    Q.adjustmentFactors_ddp_prussia = 0.95;
    Q.adjustmentFactors_dbp_prussia = 0.66;
    Q.adjustmentFactors_z_prussia = 1.02;
    Q.adjustmentFactors_dvp_prussia = 1.025;
    Q.adjustmentFactors_csvd_prussia = 1.3;
    Q.adjustmentFactors_wp_prussia = 1.3;
    Q.adjustmentFactors_cnblp_prussia = 1.3;
    Q.adjustmentFactors_kvp_prussia = 1.3;
    Q.adjustmentFactors_dnvp_prussia = 1.3;
    Q.adjustmentFactors_nsdap_prussia = 1.0;
    Q.adjustmentFactors_other_prussia = 0.85;
} else if (Q.year == 1930 && Q.kvp_formed == 1) {
    Q.adjustmentFactors_spd_prussia = 0.95;
    Q.adjustmentFactors_sapd_prussia = 1.0;
    Q.adjustmentFactors_kpd_prussia = 1.05;
    Q.adjustmentFactors_ddp_prussia = 0.95;
    Q.adjustmentFactors_dbp_prussia = 0.65;
    Q.adjustmentFactors_z_prussia = 1.02;
    Q.adjustmentFactors_dvp_prussia = 1.05;
    Q.adjustmentFactors_csvd_prussia = 1.3;
    Q.adjustmentFactors_wp_prussia = 1.3;
    Q.adjustmentFactors_cnblp_prussia = 1.3;
    Q.adjustmentFactors_kvp_prussia = 1.3;
    Q.adjustmentFactors_dnvp_prussia = 0.8;
    Q.adjustmentFactors_nsdap_prussia = 1.0;
    Q.adjustmentFactors_other_prussia = 0.8;
} else if (Q.year == 1930 && Q.kvp_formed == 0) {
    Q.adjustmentFactors_spd_prussia = 0.95;
    Q.adjustmentFactors_sapd_prussia = 1.0;
    Q.adjustmentFactors_kpd_prussia = 1.05;
    Q.adjustmentFactors_ddp_prussia = 0.95;
    Q.adjustmentFactors_dbp_prussia = 0.65;
    Q.adjustmentFactors_z_prussia = 1.02;
    Q.adjustmentFactors_dvp_prussia = 1.0;
    Q.adjustmentFactors_csvd_prussia = 1.3;
    Q.adjustmentFactors_wp_prussia = 1.3;
    Q.adjustmentFactors_cnblp_prussia = 1.3;
    Q.adjustmentFactors_kvp_prussia = 1.3;
    Q.adjustmentFactors_dnvp_prussia = 1.3;
    Q.adjustmentFactors_nsdap_prussia = 1.0;
    Q.adjustmentFactors_other_prussia = 0.75;
} else if (Q.year == 1931) {
    Q.adjustmentFactors_spd_prussia = 0.95;
    Q.adjustmentFactors_sapd_prussia = 1.3;
    Q.adjustmentFactors_kpd_prussia = 1.0;
    Q.adjustmentFactors_ddp_prussia = 0.95;
    Q.adjustmentFactors_dbp_prussia = 0.7;
    Q.adjustmentFactors_z_prussia = 1.02;
    Q.adjustmentFactors_dvp_prussia = 1.1;
    Q.adjustmentFactors_csvd_prussia = 1.0;
    Q.adjustmentFactors_wp_prussia = 1.0;
    Q.adjustmentFactors_cnblp_prussia = 1.0;
    Q.adjustmentFactors_kvp_prussia = 1.0;
    Q.adjustmentFactors_dnvp_prussia = 1.25;
    Q.adjustmentFactors_nsdap_prussia = 1.0;
    Q.adjustmentFactors_other_prussia = 0.7;
} else if (Q.year >= 1932) {
    Q.adjustmentFactors_spd_prussia = 0.95;
    Q.adjustmentFactors_sapd_prussia = 1.5;
    Q.adjustmentFactors_kpd_prussia = 1.0;
    Q.adjustmentFactors_ddp_prussia = 0.95;
    Q.adjustmentFactors_dbp_prussia = 0.7;
    Q.adjustmentFactors_z_prussia = 1.02;
    Q.adjustmentFactors_dvp_prussia = 1.0;
    Q.adjustmentFactors_csvd_prussia = 0.8;
    Q.adjustmentFactors_wp_prussia = 0.8;
    Q.adjustmentFactors_cnblp_prussia = 0.8;
    Q.adjustmentFactors_kvp_prussia = 0.8;
    Q.adjustmentFactors_dnvp_prussia = 1.2;
    Q.adjustmentFactors_nsdap_prussia = 1.0;
    Q.adjustmentFactors_other_prussia = 0.65;
}

if (Q.ddp_votes < 3) Q.adjustmentFactors_ddp_prussia = 0.8;
if (Q.ddp_votes < 2) Q.adjustmentFactors_ddp_prussia = 0.5;
if (Q.ddp_votes < 1.5) Q.adjustmentFactors_ddp_prussia = 0.3;
if (Q.ddp_votes < 1) Q.adjustmentFactors_ddp_prussia = 0.1;
if (Q.ddp_votes >= 3) Q.adjustmentFactors_ddp_prussia = 1.0;

var new_party_sum = 0;
for (var party of Q.parties) {
    Q['old_' + party + '_pl'] = Q[party + '_pl'];
    Q[party + '_votes_prussia'] = Q[party + '_votes_prussia'] * Q['adjustmentFactors_' + party + '_prussia']
    if (Q.constitutional_reform > 0) {
        if (Q[party + '_votes_prussia'] < Q.electoral_threshold || (Q.electoral_threshold > 1 && party == 'other') || Q[party + '_banned']) {
            Q[party + '_pl'] = 0;
        } else {
            Q[party + '_pl'] = Q[party + '_votes_prussia'];
        }
        new_party_sum += Q[party + '_pl'];
    } else {
        Q[party + '_pl'] = Q[party + '_votes_prussia'];
    }
    // if we use decimals, then we might want to truncate the numbers
    Q[party + '_pl'] = parseFloat((Q[party+'_pl']).toFixed(1));

    Q['change_' + party + '_pl'] = Q[party + '_pl'] - Q['old_' + party + '_pl'];
    var sign = Q['change_' + party + '_pl'] > 0 
                   ? '<img src="img/arrowup.png"> ' 
                   : Q['change_' + party + '_pl'] < 0 
                     ? '<img src="img/arrowdown.png"> ' 
                     : '<img src="img/steady.png"> ';
    Q['change_' + party + '_pl'] = sign + Math.abs(parseFloat(Q['change_' + party + '_pl'])).toFixed(1);

    Q['change_' + party + '_votes_prussia'] = Q[party + '_votes_prussia'] - Q['old_' + party + '_votes_prussia'];
    var sign2 = Q['change_' + party + '_votes_prussia'] > 0 
                    ? '<img src="img/arrowup.png"> ' 
                    : Q['change_' + party + '_votes_prussia'] < 0 
                      ? '<img src="img/arrowdown.png"> ' 
                      : '<img src="img/steady.png"> ';
    Q['votes_change_' + party + '_prussia'] = sign2 + Math.abs(parseFloat(Q['change_' + party + '_votes_prussia'])).toFixed(1);

    Q['old_' + party + '_votes_prussia'] = parseFloat((Q[party + '_votes_prussia']).toFixed(1));
}
// calculate new party sum if electoral reform
if (Q.electoral_threshold && Q.electoral_threshold > 0) {
    for (var party of Q.parties) {
        if (Q[party + '_pl'] > 0) {
            Q[party + '_pl'] = Math.round(Q[party + '_pl']*1000/new_party_sum)/10;
        }
        Q[party + '_pl'] = parseFloat((Q[party+'_pl']).toFixed(1));
        
        Q['change_' + party + '_pl'] = Q[party + '_pl'] - Q['old_' + party + '_pl'];
        var sign = Q['change_' + party + '_pl'] > 0 
                   ? '<img src="img/arrowup.png"> ' 
                   : Q['change_' + party + '_pl'] < 0
                     ? '<img src="img/arrowdown.png"> '
                     : '<img src="img/steady.png"> ';
        Q['change_' + party + '_pl'] = sign + Math.abs(parseFloat(Q['change_' + party + '_pl'])).toFixed(1);
    }
}

Q.largest_party = 'SPD';
if (Q.nsdap_pl >= Q.spd_pl && Q.nsdap_pl >= Q.kpd_pl && Q.nsdap_pl >= Q.dvp_pl) {
    Q.largest_party = 'NSDAP';
}

if (Q.kpd_pl >= Q.spd_pl && Q.kpd_pl >= Q.nsdap_pl && Q.kpd_pl >= Q.dvp_pl) {
    Q.largest_party = 'KPD';
}

if (Q.dvp_pl >= Q.spd_pl && Q.dvp_pl >= Q.nsdap_pl && Q.dvp_pl >= Q.kpd_pl) {
    Q.largest_party = Q.dvp_name;
}


if (Q.lvp_formed == 0) Q.weimar_coalition_prussia = parseFloat((Q.spd_pl + Q.ddp_pl + Q.z_pl).toFixed(1));
if (Q.lvp_formed == 1) Q.weimar_coalition_prussia = parseFloat((Q.spd_pl + Q.dvp_pl + Q.z_pl).toFixed(1));
Q.grand_coalition_prussia = parseFloat((Q.spd_pl + Q.ddp_pl + Q.z_pl + Q.dvp_pl).toFixed(1));
Q.bourgeois_coalition_prussia = parseFloat((Q.ddp_pl + Q.z_pl + Q.dvp_pl + Q.other_pl + Q.kvp_pl + Q.wp_pl + Q.dbp_pl + Q.cnblp_pl + Q.csvd_pl).toFixed(1));
if (Q.kvp_formed) Q.center_right_coalition_prussia = parseFloat((Q.z_pl + Q.ddp_pl + Q.dvp_pl + Q.other_pl + Q.kvp_pl + Q.wp_pl + Q.dbp_pl + Q.cnblp_pl + Q.csvd_pl).toFixed(1));
if (!Q.kvp_formed) Q.center_right_coalition_prussia = parseFloat((Q.z_pl + Q.ddp_pl + Q.dvp_pl + Q.other_pl + Q.dnvp_pl + Q.wp_pl + Q.dbp_pl + Q.cnblp_pl + Q.csvd_pl).toFixed(1));
Q.right_coalition_prussia = parseFloat((Q.z_pl + Q.dvp_pl + Q.other_pl + Q.kvp_pl + Q.dnvp_pl + Q.wp_pl + Q.cnblp_pl + Q.csvd_pl).toFixed(1));
Q.far_right_coalition_prussia = parseFloat((Q.dnvp_pl + Q.nsdap_pl).toFixed(1));
Q.anti_democratic_coalition_prussia = parseFloat((Q.kpd_pl + Q.nsdap_pl + Q.dnvp_pl).toFixed(1));


Q.in_right_coalition_prussia = 0;
Q.in_liberal_catholic_coalition_prussia = 0;
Q.in_social_liberal_coalition_prussia = 0;
Q.in_weimar_coalition_prussia = 0;
Q.in_grand_coalition_prussia = 0;
Q.in_minority_grand_coalition_prussia = 0;
Q.in_spd_majority_prussia = 0;
Q.in_dvp_majority_prussia = 0;
Q.in_center_right_coalition_prussia = 0;
Q.in_far_right_coalition_prussia = 0;
Q.in_minority_weimar_coalition_prussia = 0;
Q.in_minority_liberal_catholic_coalition_prussia = 0;
Q.in_minority_social_liberal_coalition_prussia = 0;
Q.spd_prussia = 0;
Q.dvp_prussia = 0;
Q.spd_toleration_prussia = 0;
Q.dvp_toleration_prussia = 0
!}


on-display: {!
data = [
    {
        "id": "kpd",
        "legend": "KPD",
        "name": "KPD",
        "seats": Math.round(Q.kpd_pl*4.5),
    }
];
if (Q.sapd_formed && Q.sapd_pl) {
    data.push({
            "id": "sapd",
            "legend": "SAPD",
            "name": "SAPD",
            "seats": Math.round(Q.sapd_pl*4.5),
            });
}
data = data.concat([
    {
        "id": "spd",
        "legend": "SPD",
        "name": "SPD",
        "seats": Math.round(Q.spd_pl*4.5),
    }
]);
if (Q.lvp_formed == 0) {
    data.push({
        "id": "ddp",
        "legend": Q.ddp_name,
        "name": Q.ddp_name,
        "seats": Math.round(Q.ddp_pl*4.5),
    });
}
if (Q.dbp_exist && Q.dbp_pl) {
    data.push({
        "id": "dbp",
        "legend": "DBP",
        "name": "DBP",
        "seats": Math.round(Q.dbp_pl*4.5),
    });
}
if (Q.lvp_formed == 1) {
    data.push({
        "id": "lvp",
        "legend": Q.dvp_name,
        "name": Q.dvp_name,
        "seats": Math.round(Q.dvp_pl*4.5),
    });
}
data = data.concat([
    {
        "id": "z",
        "legend": "Center",
        "name": "Center",
        "seats": Math.round(Q.z_pl*4.5),
    },
]);
if (Q.lvp_formed == 0) {
    data.push({
        "id": "dvp",
        "legend": Q.dvp_name,
        "name": Q.dvp_name,
        "seats": Math.round(Q.dvp_pl*4.5),
    });
}

if (Q.csvd_exist && Q.csvd_pl) {
    data.push({
        "id": "csvd",
        "legend": "CSVD",
        "name": "CSVD",
        "seats": Math.round(Q.csvd_pl*4.5),
    });
}

if (Q.wp_exist && Q.wp_pl) {
    data.push({
        "id": "wp",
        "legend": "WP",
        "name": "WP",
        "seats": Math.round(Q.wp_pl*4.5),
    });
}

if (Q.cnblp_exist && Q.cnblp_pl) {
    data.push({
        "id": "cnblp",
        "legend": "CNBLP",
        "name": "CNBLP",
        "seats": Math.round(Q.cnblp_pl*4.5),
    });
}

data = data.concat([
    {
        "id": "other",
        "legend": "Other",
        "name": "Other",
        "seats": Math.round(Q.other_pl*4.5),
    }
]);
if (Q.kvp_formed && Q.kvp_pl) {
    data.push({
        "id": "kvp",
        "legend": "KVP",
        "name": "KVP",
        "seats": Math.round(Q.kvp_pl*4.5),
    });
}
data = data.concat([
    {
        "id": "dnvp",
        "legend": "DNVP",
        "name": "DNVP",
        "seats": Math.round(Q.dnvp_pl*4.5),
    },
    {
        "id": "nsdap",
        "legend": "NSDAP",
        "name": "NSDAP",
        "seats": Math.round(Q.nsdap_pl*4.5),
    },
]);

if (window && d3) {
    var width = 500; 
    var height = 500;
    var screenWidth = document.getElementById('content').offsetWidth;
    if (screenWidth < width - 50) {
        width = screenWidth - 50; 
        height = width;
        document.getElementById("reichstag").style.height = screenWidth/2 + "px";
    } 

    var parliament = d3.parliament();
    parliament.width(width).height(height).innerRadiusCoef(0.4);
    parliament.enter.fromCenter(true).smallToBig(true);
    parliament.exit.toCenter(false).bigToSmall(true);
    d3.select("#reichstag").datum(data).call(parliament);
}
!}

= Election results

{!<svg id="reichstag" style="width: 500px; height: 250px;"> </svg>!}

{!<table>!} 
{!<tr><td>Party</td><td>Vote Share</td><td>% Change</td><td>Landtag Seats</td><td>% Change</td></tr>!}
[? if not lvp_formed: {!<tr><td><div class="box" style='background-color:#D5AC27; outline: 2px; outline-style: solid;'> </div> !} **[+ dvp_name +]**: {!</td><td>!} **[+ dvp_votes_prussia +]%** {!</td><td>!} **[+ votes_change_dvp_prussia +]** {!</td><td>!} **[+ dvp_pl +]%** {!</td><td>!} **[+ change_dvp_pl +]** {!</td></tr>!} ?]
[? if lvp_formed: {!<tr><td><div class="box" style='background-color:#FFA500; outline: 2px; outline-style: solid;'> </div> !} **[+ dvp_name +]**: {!</td><td>!} **[+ dvp_votes_prussia +]%** {!</td><td>!} **[+ votes_change_dvp_prussia +]** {!</td><td>!} **[+ dvp_pl +]%** {!</td><td>!} **[+ change_dvp_pl +]** {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#8B0000'> </div> !}KPD: {!</td><td>!} [+ kpd_votes_prussia +]% {!</td><td>!} [+ votes_change_kpd_prussia +] {!</td><td>!} [+ kpd_pl +]% {!</td><td>!} [+ change_kpd_pl +] {!</td></tr>!}

[? if sapd_formed: {!<tr><td><div class="box" style='background-color:#C40000'> </div> !} SAPD: {!</td><td>!} [+ sapd_votes_prussia +]% {!</td><td>!} [+ votes_change_sapd_prussia +] {!</td><td>!} [+ sapd_pl +]% {!</td><td>!} [+ change_sapd_pl +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#E3000F'> </div> !} SPD: {!</td><td>!} [+ spd_votes_prussia +]% {!</td><td>!} [+ votes_change_spd_prussia +] {!</td><td>!} [+ spd_pl +]% {!</td><td>!} [+ change_spd_pl +] {!</td></tr>!}

[? if ddp_exist: {!<tr><td><div class="box" style='background-color:#DCCA4A'> </div> !} [+ ddp_name +]: {!</td><td>!} [+ ddp_votes_prussia +]% {!</td><td>!} [+ votes_change_ddp_prussia +] {!</td><td>!} [+ ddp_pl +]% {!</td><td>!} [+ change_ddp_pl +] {!</td></tr>!} ?]

[? if dbp_exist: {!<tr><td><div class="box" style='background-color:#38C538'> </div> !} DBP: {!</td><td>!} [+ dbp_votes_prussia +]% {!</td><td>!} [+ votes_change_dbp_prussia +] {!</td><td>!} [+ dbp_pl +]% {!</td><td>!} [+ change_dbp_pl +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#000'> </div> !} Z: {!</td><td>!} [+ z_minus_bvp_votes_prussia +]% {!</td><td>!} [+ votes_change_z_prussia +] {!</td><td>!} [+ z_pl +]% {!</td><td>!} [+ change_z_pl +] {!</td></tr>!}

[? if csvd_exist: {!<tr><td><div class="box" style='background-color:#8ED8E4'> </div> !} CSVD: {!</td><td>!} [+ csvd_votes_prussia +]% {!</td><td>!} [+ votes_change_csvd_prussia +] {!</td><td>!} [+ csvd_pl +]% {!</td><td>!} [+ change_csvd_pl +] {!</td><td>!} ?]

[? if wp_exist: {!<tr><td><div class="box" style='background-color:#B8996F'> </div> !} WP: {!</td><td>!} [+ wp_votes_prussia +]% {!</td><td>!} [+ votes_change_wp_prussia +] {!</td><td>!} [+ wp_pl +]% {!</td><td>!} [+ change_wp_pl +] {!</td><td>!} ?]

[? if cnblp_exist: {!<tr><td><div class="box" style='background-color:#7FCEB1'> </div> !} CNBLP: {!</td><td>!} [+ cnblp_votes_prussia +]% {!</td><td>!} [+ votes_change_cnblp_prussia +] {!</td><td>!} [+ cnblp_pl +]% {!</td><td>!} [+ change_cnblp_pl +] {!</td><td>!} ?]

[? if kvp_formed: {!<tr><td><div class="box" style='background-color:#455B95'> </div> !} KVP: {!</td><td>!} [+ kvp_votes_prussia +]% {!</td><td>!} [+ votes_change_kvp_prussia +] {!</td><td>!} [+ kvp_pl +]% {!</td><td>!} [+ change_kvp_pl +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#3f7bc1'> </div> !} DNVP: {!</td><td>!} [+ dnvp_votes_prussia +]% {!</td><td>!} [+ votes_change_dnvp_prussia +] {!</td><td>!} [+ dnvp_pl +]% {!</td><td>!} [+ change_dnvp_pl +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#954B00'> </div> !} NSDAP: {!</td><td>!} [+ nsdap_votes_prussia +]% {!</td><td>!} [+ votes_change_nsdap_prussia +] {!</td><td>!} [+ nsdap_pl +]% {!</td><td>!} [+ change_nsdap_pl +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#a0a0a0'> </div> !} Others: {!</td><td>!} [+ other_votes_prussia +]% {!</td><td>!} [+ votes_change_other_prussia +] {!</td><td>!} [+ other_pl +]% {!</td><td>!} [+ change_other_pl +] {!</td></tr>!}
{!</table>!}
