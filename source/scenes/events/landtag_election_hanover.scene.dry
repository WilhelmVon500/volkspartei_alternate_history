title: Hanover Landtag Election
view-if: year = next_election_year_hanover and month >= next_election_month_hanover and reichsreform
new-page: true
tags: event
priority: 3
on-arrival: next_election_year_hanover = next_election_year_hanover + 4; next_election_time_hanover = time + 48; dvp_hanover = 0

= Hanoverian Elections, [+ month : month +] [+ year +]

The Hanoverian elections are to be held now.

- @new_elections: May we do our best...

@new_elections
on-arrival: {!
for (var c of Q.classes) {
    var class_votes = 0;
    for (var party of Q.parties) {
        if (Q[c + '_' + party] < 0) {
            Q[c + '_' + party] = 0;
        }
        class_votes += Q[c + '_' + party];
    }
    for (var party of Q.parties) {
        Q[c + '_' + party + '_normalized_hanover'] = Math.round(100 * Q[c + '_' + party] / class_votes);
    }
}

// Define adjustment factors
Q.adjustmentFactors_spd_hanover = 1.1;
Q.adjustmentFactors_aspd_hanover = 0.8;
Q.adjustmentFactors_kpd_hanover = 0.7;
Q.adjustmentFactors_ddp_hanover = 0.8;
Q.adjustmentFactors_dbp_hanover = 0.0;
Q.adjustmentFactors_z_hanover = 1.6;
Q.adjustmentFactors_dvp_hanover = 1.0;
Q.adjustmentFactors_csvd_hanover = 1.0;
Q.adjustmentFactors_wp_hanover = 0.8;
Q.adjustmentFactors_cnblp_hanover = 1.2;
Q.adjustmentFactors_kvp_hanover = 0.7;
Q.adjustmentFactors_dnvp_hanover = 0.7;
Q.adjustmentFactors_dnf_hanover = 0.7;
Q.adjustmentFactors_nsdap_hanover = 1.0;
Q.adjustmentFactors_other_hanover = 0.3;



// Calculate support for each of the parties
var total_support = 0;
for (var party of Q.parties) {
    var party_support = 0;
    for (var c of Q.classes) {
        if (Q.old_demographics) {
            party_support += Q[c] * Q[c + '_' + party];
        } else {
            party_support += Q[c] * Q[c + '_' + party + '_normalized_hanover'];
        }
    }
    // Apply adjustment factor
    Q[party + '_support'] = party_support * Q['adjustmentFactors_' + party + '_hanover']
    total_support += Q[party + '_support'];
}

// Normalize support (fraction)
for (var party of Q.parties) {
    Q[party + '_normalized_hanover'] = Q[party + '_support'] / total_support;
    Q[party + '_votes_hanover'] = Math.round(Q[party + '_normalized_hanover'] * 1000) / 10;
}

var old_z_hanover = Q.old_z_votes_hanover;
var new_party_sum = 0;
for (var party of Q.parties) {
    Q['old_' + party + '_hl'] = Q[party + '_hl'];
    Q[party + '_votes_hanover'] = parseFloat((Q[party + '_votes_hanover']).toFixed(1))
    if (Q.electoral_threshold > 0) {
        if (Q[party + '_votes_hanover'] < Q.electoral_threshold || (Q.electoral_threshold > 1 && party == 'other') || Q[party + '_banned']) {
            Q[party + '_hl'] = 0;
        } else {
            Q[party + '_hl'] = Q[party + '_votes_hanover'];
        }
        new_party_sum += Q[party + '_hl'];
    } else {
        Q[party + '_hl'] = Q[party + '_votes_hanover'];
        if (party == 'other') Q[party + '_hl'] = Q[party + '_votes_hanover'] * 0.3;
        new_party_sum += Q[party + '_hl'];
    }

    Q['change_' + party + '_votes_hanover'] = Q[party + '_votes_hanover'] - Q['old_' + party + '_votes_hanover'];
    var sign2 = Q['change_' + party + '_votes_hanover'] > 0 
                    ? '<img src="img/arrowup.png"> ' 
                    : Q['change_' + party + '_votes_hanover'] < 0 
                      ? '<img src="img/arrowdown.png"> ' 
                      : '<img src="img/steady.png"> ';
    Q['votes_change_' + party + '_hanover'] = sign2 + Math.abs(parseFloat(Q['change_' + party + '_votes_hanover'])).toFixed(1);

    Q['old_' + party + '_votes_hanover'] = parseFloat((Q[party + '_votes_hanover']).toFixed(1));
}
// calculate new party sum if electoral reform
if (new_party_sum > 0) {
    for (var party of Q.parties) {
        if (Q[party + '_hl'] > 0) {
            Q[party + '_hl'] = Math.round(Q[party + '_hl']*1000/new_party_sum)/10;
        }
        Q[party + '_hl'] = parseFloat((Q[party+'_hl']).toFixed(1));
        
        Q['change_' + party + '_hl'] = Q[party + '_hl'] - Q['old_' + party + '_hl'];
        var sign = Q['change_' + party + '_hl'] > 0 
                   ? '<img src="img/arrowup.png"> ' 
                   : Q['change_' + party + '_hl'] < 0
                     ? '<img src="img/arrowdown.png"> '
                     : '<img src="img/steady.png"> ';
        Q['change_' + party + '_hl'] = sign + Math.abs(parseFloat(Q['change_' + party + '_hl'])).toFixed(1);
    }
}



Q.dhp_votes_hanover = parseFloat((Q.z_votes_hanover*0.8).toFixed(1));
Q.dhp_hl = parseFloat((Q.dhp_votes_hanover*1.01).toFixed(1));

Q.z_votes_hanover = parseFloat((Q.z_votes_hanover - Q.dhp_votes_hanover).toFixed(1));
Q.z_hl = parseFloat((Q.z_hl - Q.dhp_hl).toFixed(1));


Q.change_dhp_votes_hanover = Q.dhp_votes_hanover - Q.old_dhp_votes_hanover;
var sign2 = Q.change_dhp_votes_hanover > 0 
? '<img src="img/arrowup.png"> ' 
: Q.change_dhp_votes_hanover < 0 
  ? '<img src="img/arrowdown.png"> ' 
  : '<img src="img/steady.png"> ';
Q.votes_change_dhp_hanover = sign2 + Math.abs(parseFloat(Q.change_dhp_votes_hanover)).toFixed(1);

Q.change_dhp_hl = Q.dhp_hl - Q.old_dhp_hl;
var sign = Q.change_dhp_hl > 0 
? '<img src="img/arrowup.png"> ' 
: Q.change_dhp_hl < 0
  ? '<img src="img/arrowdown.png"> '
  : '<img src="img/steady.png"> ';
Q.change_dhp_hl = sign + Math.abs(parseFloat(Q.change_dhp_hl)).toFixed(1);

Q.change_z_votes_hanover = Q.z_votes_hanover - old_z_hanover;
var sign2 = Q.change_z_votes_hanover > 0
? '<img src="img/arrowup.png"> ' 
: Q.change_z_votes_hanover < 0 
  ? '<img src="img/arrowdown.png"> ' 
  : '<img src="img/steady.png"> ';
Q.votes_change_z_hanover = sign2 + Math.abs(parseFloat(Q.change_z_votes_hanover)).toFixed(1);

Q.change_z_hl = Q.z_hl - Q.old_z_hl;
var sign = Q.change_z_hl > 0 
? '<img src="img/arrowup.png"> ' 
: Q.change_z_hl < 0
  ? '<img src="img/arrowdown.png"> '
  : '<img src="img/steady.png"> ';
Q.change_z_hl = sign + Math.abs(parseFloat(Q.change_z_hl)).toFixed(1);

Q.old_dhp_votes_hanover = Q.dhp_votes_hanover;
Q.old_dhp_hl = Q.dhp_hl;
Q.old_z_votes_hanover = Q.z_votes_hanover;
Q.old_z_hl = Q.z_hl;



Q.grand_coalition_hanover = parseFloat((Q.spd_hl + Q.ddp_hl + Q.dvp_hl + Q.z_hl).toFixed(1));
Q.bourgeois_coalition_hanover = parseFloat((Q.ddp_hl + Q.z_hl + Q.dhp_hl + Q.dvp_hl + Q.other_hl + Q.kvp_hl + Q.wp_hl + Q.csvd_hl + Q.cnblp_hl).toFixed(1));
if (Q.dnvp_ideology === "Radical") Q.far_right_coalition_hanover = parseFloat((Q.dnvp_hl + Q.nsdap_hl).toFixed(1));
if (Q.dnf_formed) Q.far_right_coalition_hanover = parseFloat((Q.dnf_hl + Q.nsdap_hl).toFixed(1));


Q.in_dvp_majority_hanover = 0
Q.in_grand_coalition_hanover = 0;
Q.in_bourgeois_coalition_hanover = 0;
Q.in_far_right_coalition_hanover = 0;
!}
on-display: {!
data = [
    {
        "id": "kpd",
        "legend": "KPD",
        "name": "KPD",
        "seats": Math.round(Q.kpd_hl*1.5),
    },
    {
        "id": "spd",
        "legend": "SPD",
        "name": "SPD",
        "seats": Math.round(Q.spd_hl*1.5),
    }
];
if (Q.aspd_exist && Q.aspd_hl) {
    data.push({
        "id": "aspd",
        "legend": "ASPD",
        "name": "ASPD",
        "seats": Math.round(Q.aspd_hl*1.5),
    });
}
if (Q.ddp_exist && Q.ddp_hl) {
    data.push({
        "id": "ddp",
        "legend": Q.ddp_name,
        "name": Q.ddp_name,
        "seats": Math.round(Q.ddp_hl*1.5),
    });
}
if (Q.lvp_formed && Q.dvp_hl) {
    data.push({
        "id": "lvp",
        "legend": Q.dvp_name,
        "name": Q.dvp_name,
        "seats": Math.round(Q.dvp_hl*1.5),
    });
}
data = data.concat([
    {
        "id": "z",
        "legend": "Center",
        "name": "Center",
        "seats": Math.round(Q.z_hl*1.5),
    },
]);
if (Q.dhp_hl) {
    data.push({
        "id": "dhp",
        "legend": "DHP",
        "name": "DHP",
        "seats": Math.round(Q.dhp_hl*1.5),
    });
}
if (Q.nfvp_formed && Q.dvp_hl) {
    data.push({
        "id": "nfvp",
        "legend": Q.dvp_name,
        "name": Q.dvp_name,
        "seats": Math.round(Q.dvp_hl*1.5),
    });
}
if (!Q.lvp_formed && !Q.nfvp_formed && Q.dvp_hl) {
    data.push({
        "id": "dvp",
        "legend": Q.dvp_name,
        "name": Q.dvp_name,
        "seats": Math.round(Q.dvp_hl*1.5),
    });
}

if (Q.csvd_exist && Q.csvd_hl) {
    data.push({
        "id": "csvd",
        "legend": "CSVD",
        "name": "CSVD",
        "seats": Math.round(Q.csvd_hl*1.5),
    });
}

if (Q.wp_exist && Q.wp_hl) {
    data.push({
        "id": "wp",
        "legend": "WP",
        "name": "WP",
        "seats": Math.round(Q.wp_hl*1.5),
    });
}

if (Q.cnblp_exist && Q.cnblp_hl) {
    data.push({
        "id": "cnblp",
        "legend": "CNBLP",
        "name": "CNBLP",
        "seats": Math.round(Q.cnblp_hl*1.5),
    });
}

data = data.concat([
    {
        "id": "other",
        "legend": "Other",
        "name": "Other",
        "seats": Math.round(Q.other_hl*1.5),
    }
]);
if (Q.kvp_formed && Q.kvp_hl) {
    data.push({
        "id": "kvp",
        "legend": "KVP",
        "name": "KVP",
        "seats": Math.round(Q.kvp_hl*1.5),
    });
}
if (Q.dnvp_hl) {
    data.push({
        "id": "dnvp",
        "legend": "DNVP",
        "name": "DNVP",
        "seats": Math.round(Q.dnvp_hl*1.5),
    });
}
if (Q.dnf_formed && Q.dnf_hl) {
    data.push({
        "id": "dnf",
        "legend": "DNF",
        "name": "DNF",
        "seats": Math.round(Q.dnf_hl*1.5),
    });
}
data = data.concat([
    {
        "id": "nsdap",
        "legend": "NSDAP",
        "name": "NSDAP",
        "seats": Math.round(Q.nsdap_hl*1.5),
    }
]);

if (window && d3) {
    var width = 500; 
    var height = 500;
    var screenWidth = document.getElementById('content').offsetWidth;
    if (screenWidth < width - 50) {
        width = screenWidth - 50; 
        height = width;
        document.getElementById("reichstag").style.height = screenWidth/2 + "px";
    } 

    var parliament = d3.parliament();
    parliament.width(width).height(height).innerRadiusCoef(0.4);
    parliament.enter.fromCenter(true).smallToBig(true);
    parliament.exit.toCenter(false).bigToSmall(true);
    d3.select("#reichstag").datum(data).call(parliament);
}
!}
go-to: coalition_menu

= Election results

{!<svg id="reichstag" style="width: 500px; height: 250px;"> </svg>!}

{!<table>!} 
{!<tr><td>Party</td><td>Vote Share</td><td>% Change</td><td>Landtag Seats</td><td>% Change</td></tr>!}
{!<tr><td><div class="box" style='background-color: var(--dvp-color); outline: 2px; outline-style: solid;'> </div> !} **[+ dvp_name +]**: {!</td><td>!} **[+ dvp_votes_hanover +]%** {!</td><td>!} **[+ votes_change_dvp_hanover +]** {!</td><td>!} **[+ dvp_hl +]%** {!</td><td>!} **[+ change_dvp_hl +]** {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#8B0000'> </div> !}KPD: {!</td><td>!} [+ kpd_votes_hanover +]% {!</td><td>!} [+ votes_change_kpd_hanover +] {!</td><td>!} [+ kpd_hl +]% {!</td><td>!} [+ change_kpd_hl +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#E3000F'> </div> !} SPD: {!</td><td>!} [+ spd_votes_hanover +]% {!</td><td>!} [+ votes_change_spd_hanover +] {!</td><td>!} [+ spd_hl +]% {!</td><td>!} [+ change_spd_hl +] {!</td></tr>!}

[? if aspd_exist: {!<tr><td><div class="box" style='background-color:#FE9E00'> </div> !} ASPD: {!</td><td>!} [+ aspd_votes_hanover +]% {!</td><td>!} [+ votes_change_aspd_hanover +] {!</td><td>!} [+ aspd_hl +]% {!</td><td>!} [+ change_aspd_hl +] {!</td><td>!} ?]

[? if ddp_exist: {!<tr><td><div class="box" style='background-color:#DCCA4A'> </div> !} [+ ddp_name +]: {!</td><td>!} [+ ddp_votes_hanover +]% {!</td><td>!} [+ votes_change_ddp_hanover +] {!</td><td>!} [+ ddp_hl +]% {!</td><td>!} [+ change_ddp_hl +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#000'> </div> !} Z: {!</td><td>!} [+ z_votes_hanover +]% {!</td><td>!} [+ votes_change_z_hanover +] {!</td><td>!} [+ z_hl +]% {!</td><td>!} [+ change_z_hl +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#63C489'> </div> !} DHP: {!</td><td>!} [+ dhp_votes_hanover +]% {!</td><td>!} [+ votes_change_dhp_hanover +] {!</td><td>!} [+ dhp_hl +]% {!</td><td>!} [+ change_dhp_hl +] {!</td></tr>!}

[? if csvd_exist: {!<tr><td><div class="box" style='background-color:#8ED8E4'> </div> !} CSVD: {!</td><td>!} [+ csvd_votes_hanover +]% {!</td><td>!} [+ votes_change_csvd_hanover +] {!</td><td>!} [+ csvd_hl +]% {!</td><td>!} [+ change_csvd_hl +] {!</td><td>!} ?]

[? if wp_exist: {!<tr><td><div class="box" style='background-color:#B8996F'> </div> !} WP: {!</td><td>!} [+ wp_votes_hanover +]% {!</td><td>!} [+ votes_change_wp_hanover +] {!</td><td>!} [+ wp_hl +]% {!</td><td>!} [+ change_wp_hl +] {!</td><td>!} ?]

[? if cnblp_exist: {!<tr><td><div class="box" style='background-color:#7FCEB1'> </div> !} CNBLP: {!</td><td>!} [+ wp_votes_hanover +]% {!</td><td>!} [+ votes_change_wp_hanover +] {!</td><td>!} [+ wp_hl +]% {!</td><td>!} [+ change_wp_hl +] {!</td><td>!} ?]

[? if kvp_formed: {!<tr><td><div class="box" style='background-color:#455B95'> </div> !} KVP: {!</td><td>!} [+ kvp_votes_hanover +]% {!</td><td>!} [+ votes_change_kvp_hanover +] {!</td><td>!} [+ kvp_hl +]% {!</td><td>!} [+ change_kvp_hl +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#3f7bc1'> </div> !} DNVP: {!</td><td>!} [+ dnvp_votes_hanover +]% {!</td><td>!} [+ votes_change_dnvp_hanover +] {!</td><td>!} [+ dnvp_hl +]% {!</td><td>!} [+ change_dnvp_hl +] {!</td></tr>!}

[? if dnf_formed: {!<tr><td><div class="box" style='background-color:#003755'> </div> !} DNF: {!</td><td>!} [+ dnf_votes_hanover +]% {!</td><td>!} [+ votes_change_dnf_hanover +] {!</td><td>!} [+ dnf_hl +]% {!</td><td>!} [+ change_dnf_hl +] {!</td></tr>!} ?]

{!<tr><td><div class="box" style='background-color:#954B00'> </div> !} NSDAP: {!</td><td>!} [+ nsdap_votes_hanover +]% {!</td><td>!} [+ votes_change_nsdap_hanover +] {!</td><td>!} [+ nsdap_hl +]% {!</td><td>!} [+ change_nsdap_hl +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#a0a0a0'> </div> !} Others: {!</td><td>!} [+ other_votes_hanover +]% {!</td><td>!} [+ votes_change_other_hanover +] {!</td><td>!} [+ other_hl +]% {!</td><td>!} [+ change_other_hl +] {!</td></tr>!}
{!</table>!}

**Potential coalitions:**

Grand Coalition (<span style="color: #E3000F;">**SPD**</span> + [? if ddp_exist: <span style="color: #DCCA4A;">**[+ ddp_name +]**</span> + ?] <span style="color: var(--dvp-color);">**[+ dvp_name +]**</span> + <span style="color: #000000;">**Z**</span>): [+ grand_coalition_hanover +]%

Bourgeois Coalition (<span style="color: #000000;">**Z**</span> [? if ddp_exist: + <span style="color: #DCCA4A;">**[+ ddp_name +]**</span> ?]+ <span style="color: var(--dvp-color);">**[+ dvp_name +]**</span> + <span style="color: #63C489;">**DHP**</span> + [? if kvp_formed: <span style="color: #455B95;">**KVP**</span> +  ?][? if wp_exist: <span style="color: #B8996F;">**WP**</span> +  ?][? if cnblp_exist: <span style="color: #7FCEB1;">**CNBLP**</span> +  ?][? if csvd_exist: <span style="color: #8ED8E4;">**CSVD**</span> +  ?] <span style="color: #909090;">**Others**</span>): [+ bourgeois_coalition_hanover +]%

Far-Right Coalition (<span style="color: #954B00;">**NSDAP**</span> + [? if dnvp_ideology = "Radical": <span style="color: #3F7BC1;">**DNVP**</span>?][? if dnf_formed: <span style="color: #003755;">**DNF**</span>?]): [+ far_right_coalition_hanover +]%

There are some potential coalition arrangements.

@coalition_menu

- @dvp_majority_hanover
- @grand_coalition_hanover
- @bourgeois_coalition_hanover
- @far_right_coalition_hanover
- @no_majority

@grand_coalition_hanover
title: We can form a Grand Coalition.
view-if: grand_coalition_hanover >= 50
subtitle: <span style="color: #E3000F;">**SPD**</span> + [? if ddp_exist: <span style="color: #DCCA4A;">**[+ ddp_name +]**</span> + ?] <span style="color: var(--dvp-color);">**[+ dvp_name +]**</span> + <span style="color: #000000;">**Z**</span> ([+ grand_coalition_hanover +]%)
on-arrival: in_grand_coalition_hanover = 1; dvp_hanover = 1;

We will form a Grand Coalition.

- @hanover_mp

@bourgeois_coalition_hanover
title: We can form a Bourgeois Coalition.
view-if: bourgeois_coalition_hanover >= 50
subtitle: <span style="color: #000000;">**Z**</span> [? if ddp_exist: + <span style="color: #DCCA4A;">**[+ ddp_name +]**</span> ?]+ <span style="color: var(--dvp-color);">**[+ dvp_name +]**</span> + <span style="color: #63C489;">**DHP**</span> + [? if kvp_formed: <span style="color: #455B95;">**KVP**</span> +  ?][? if wp_exist: <span style="color: #B8996F;">**WP**</span> +  ?][? if cnblp_exist: <span style="color: #7FCEB1;">**CNBLP**</span> +  ?][? if csvd_exist: <span style="color: #8ED8E4;">**CSVD**</span> +  ?] <span style="color: #909090;">**Others**</span> ([+ bourgeois_coalition_hanover +]%)
on-arrival: in_bourgeois_coalition_hanover = 1; dvp_hanover = 1;

A Bourgeois Coalition is formed.

- @hanover_mp

@far_right_coalition_hanover
title: Far-right Coalition is formed!
view-if: far_right_coalition_hanover >= 50
subtitle: <span style="color: #954B00;">**NSDAP**</span> + [? if dnvp_ideology = "Radical": <span style="color: #3F7BC1;">**DNVP**</span>?][? if dnf_formed: <span style="color: #003755;">**DNF**</span>?] ([+ far_right_coalition_hanover +]%)
on-arrival: in_far_right_coalition_hanover = 1;

A Far-right Coalition is formed.

- @hanover_mp

@dvp_majority_hanover
title: We can rule alone!
view-if: dvp_hl >= 50
subtitle: <span style="color: var(--dvp-color);">**[+ dvp_name +]**</span> ([+ dvp_hl +]%)
on-arrival: in_dvp_majority_hanover = 1; dvp_hanover = 1;

A <span style="color: var(--dvp-color);">**[+ dvp_name +]**</span> majority government is formed.

- @hanover_mp

@hanover_mp
title: The coalition will choose the Minister-President.

WIP

- @albrecht: Helmuth Albrecht
- @langwost: Heinrich Langwost
- @noske: Gustav Noske
- @schmidt: Otto Schmidt

@albrecht
view-if: dvp_hanover
choose-if: in_dvp_majority_hanover or in_grand_coalition_hanover or ((in_bourgeois_coalition_hanover) and dvp_hl > dhp_hl)
unavailable-subtitle: The <span style="color: #63C489;">**DHP**</span> can prevent him from becoming the Minister-President.
on-arrival: hanover_leader = "Albrecht"; hanover_leader_party = dvp_name;
face-image: img/portraits/AlbrechtHelmuth.jpg

Helmuth Albrecht was chosen.

@langwost
view-if: in_bourgeois_coalition_hanover
on-arrival: hanover_leader = "Langwost"; hanover_leader_party = "DHP"
face-image: img/portraits/LangwostHeinrich.jpg

Heinrich Langwost was chosen.

@noske
view-if: in_grand_coalition_hanover
on-arrival: hanover_leader = "Noske"; hanover_leader_party = "SPD"
face-image: img/portraits/NoskeGustav.jpg

Gustav Noske was chosen.

@schmidt
view-if: in_far_right_coalition_hanover
on-arrival: hanover_leader = "Schmidt"; hanover_leader_party = "DNVP" if dnvp_ideology = "Radical"; hanover_leader_party = "DNF" if dnvp_ideology = "Moderate"
face-image: img/portraits/SchmidtOtto.jpg

Otto Schmidt was chosen.


@no_majority
title: There is no clear governing majority.
view-if: grand_coalition_hanover < 50 and bourgeois_coalition_hanover < 50 and far_right_coalition_hanover < 50
on-arrival: workers_nsdap += 1; unemployed_nsdap += 1; old_middle_nsdap += 1; new_middle_nsdap += 1; rural_nsdap += 1;

There is no path to a majority government for now. The current government will stay in power as a minority coalition.
